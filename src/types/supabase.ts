/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/files": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          bucketid?: parameters["rowFilter.files.bucketid"];
          createdon?: parameters["rowFilter.files.createdon"];
          createdbyid?: parameters["rowFilter.files.createdbyid"];
          deletedon?: parameters["rowFilter.files.deletedon"];
          deletedbyid?: parameters["rowFilter.files.deletedbyid"];
          description?: parameters["rowFilter.files.description"];
          name?: parameters["rowFilter.files.name"];
          path?: parameters["rowFilter.files.path"];
          size?: parameters["rowFilter.files.size"];
          type?: parameters["rowFilter.files.type"];
          updatedon?: parameters["rowFilter.files.updatedon"];
          updatedbyid?: parameters["rowFilter.files.updatedbyid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["files"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** files */
          files?: definitions["files"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          bucketid?: parameters["rowFilter.files.bucketid"];
          createdon?: parameters["rowFilter.files.createdon"];
          createdbyid?: parameters["rowFilter.files.createdbyid"];
          deletedon?: parameters["rowFilter.files.deletedon"];
          deletedbyid?: parameters["rowFilter.files.deletedbyid"];
          description?: parameters["rowFilter.files.description"];
          name?: parameters["rowFilter.files.name"];
          path?: parameters["rowFilter.files.path"];
          size?: parameters["rowFilter.files.size"];
          type?: parameters["rowFilter.files.type"];
          updatedon?: parameters["rowFilter.files.updatedon"];
          updatedbyid?: parameters["rowFilter.files.updatedbyid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.files.id"];
          bucketid?: parameters["rowFilter.files.bucketid"];
          createdon?: parameters["rowFilter.files.createdon"];
          createdbyid?: parameters["rowFilter.files.createdbyid"];
          deletedon?: parameters["rowFilter.files.deletedon"];
          deletedbyid?: parameters["rowFilter.files.deletedbyid"];
          description?: parameters["rowFilter.files.description"];
          name?: parameters["rowFilter.files.name"];
          path?: parameters["rowFilter.files.path"];
          size?: parameters["rowFilter.files.size"];
          type?: parameters["rowFilter.files.type"];
          updatedon?: parameters["rowFilter.files.updatedon"];
          updatedbyid?: parameters["rowFilter.files.updatedbyid"];
        };
        body: {
          /** files */
          files?: definitions["files"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/users": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdon?: parameters["rowFilter.users.createdon"];
          createdbyid?: parameters["rowFilter.users.createdbyid"];
          deletedon?: parameters["rowFilter.users.deletedon"];
          deletedbyid?: parameters["rowFilter.users.deletedbyid"];
          email?: parameters["rowFilter.users.email"];
          updatedon?: parameters["rowFilter.users.updatedon"];
          updatedbyid?: parameters["rowFilter.users.updatedbyid"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["users"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions["users"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdon?: parameters["rowFilter.users.createdon"];
          createdbyid?: parameters["rowFilter.users.createdbyid"];
          deletedon?: parameters["rowFilter.users.deletedon"];
          deletedbyid?: parameters["rowFilter.users.deletedbyid"];
          email?: parameters["rowFilter.users.email"];
          updatedon?: parameters["rowFilter.users.updatedon"];
          updatedbyid?: parameters["rowFilter.users.updatedbyid"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.users.id"];
          createdon?: parameters["rowFilter.users.createdon"];
          createdbyid?: parameters["rowFilter.users.createdbyid"];
          deletedon?: parameters["rowFilter.users.deletedon"];
          deletedbyid?: parameters["rowFilter.users.deletedbyid"];
          email?: parameters["rowFilter.users.email"];
          updatedon?: parameters["rowFilter.users.updatedon"];
          updatedbyid?: parameters["rowFilter.users.updatedbyid"];
        };
        body: {
          /** users */
          users?: definitions["users"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  files: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `objects.id`.<fk table='objects' column='id'/>
     */
    id: string;
    /**
     * Note:
     * This is a Foreign Key to `buckets.id`.<fk table='buckets' column='id'/>
     */
    bucketid: string;
    createdon?: string;
    createdbyid?: string;
    deletedon?: string;
    deletedbyid?: string;
    description?: string;
    name: string;
    path: string;
    size?: number;
    type: string;
    updatedon?: string;
    updatedbyid?: string;
  };
  users: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    createdon?: string;
    createdbyid?: string;
    deletedon?: string;
    deletedbyid?: string;
    email: string;
    updatedon?: string;
    updatedbyid?: string;
  };
}

export interface parameters {
  /** Preference */
  preferParams: "params=single-object";
  /** Preference */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /** Preference */
  preferCount: "count=none";
  /** Filtering Columns */
  select: string;
  /** On Conflict */
  on_conflict: string;
  /** Ordering */
  order: string;
  /** Limiting and Pagination */
  range: string;
  /** Limiting and Pagination */
  rangeUnit: string;
  /** Limiting and Pagination */
  offset: string;
  /** Limiting and Pagination */
  limit: string;
  /** files */
  "body.files": definitions["files"];
  "rowFilter.files.id": string;
  "rowFilter.files.bucketid": string;
  "rowFilter.files.createdon": string;
  "rowFilter.files.createdbyid": string;
  "rowFilter.files.deletedon": string;
  "rowFilter.files.deletedbyid": string;
  "rowFilter.files.description": string;
  "rowFilter.files.name": string;
  "rowFilter.files.path": string;
  "rowFilter.files.size": string;
  "rowFilter.files.type": string;
  "rowFilter.files.updatedon": string;
  "rowFilter.files.updatedbyid": string;
  /** users */
  "body.users": definitions["users"];
  "rowFilter.users.id": string;
  "rowFilter.users.createdon": string;
  "rowFilter.users.createdbyid": string;
  "rowFilter.users.deletedon": string;
  "rowFilter.users.deletedbyid": string;
  "rowFilter.users.email": string;
  "rowFilter.users.updatedon": string;
  "rowFilter.users.updatedbyid": string;
}

export interface operations {}

export interface external {}
